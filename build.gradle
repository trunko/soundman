/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.5/userguide/tutorial_java_projects.html
 */

buildscript {
    dependencies {
        classpath files('src/dist/config')
    }
}

plugins {
    id 'groovy'
    id 'application'
}

repositories {
    jcenter()
    mavenCentral()
}

application {
    mainClassName = 'SoundMan.App'
    applicationDefaultJvmArgs = ['--add-opens=java.base/java.io=ALL-UNNAMED', '--add-opens=java.base/java.lang=ALL-UNNAMED', '--add-opens=java.base/java.lang.annotation=ALL-UNNAMED', '--add-opens=java.base/java.lang.invoke=ALL-UNNAMED', '--add-opens=java.base/java.lang.module=ALL-UNNAMED', '--add-opens=java.base/java.lang.ref=ALL-UNNAMED', '--add-opens=java.base/java.lang.reflect=ALL-UNNAMED', '--add-opens=java.base/java.math=ALL-UNNAMED', '--add-opens=java.base/java.net=ALL-UNNAMED', '--add-opens=java.base/java.net.spi=ALL-UNNAMED', '--add-opens=java.base/java.nio=ALL-UNNAMED', '--add-opens=java.base/java.nio.channels=ALL-UNNAMED', '--add-opens=java.base/java.nio.channels.spi=ALL-UNNAMED', '--add-opens=java.base/java.nio.charset=ALL-UNNAMED', '--add-opens=java.base/java.nio.charset.spi=ALL-UNNAMED', '--add-opens=java.base/java.nio.file=ALL-UNNAMED', '--add-opens=java.base/java.nio.file.attribute=ALL-UNNAMED', '--add-opens=java.base/java.nio.file.spi=ALL-UNNAMED', '--add-opens=java.base/java.security=ALL-UNNAMED', '--add-opens=java.base/java.security.acl=ALL-UNNAMED', '--add-opens=java.base/java.security.cert=ALL-UNNAMED', '--add-opens=java.base/java.security.interfaces=ALL-UNNAMED', '--add-opens=java.base/java.security.spec=ALL-UNNAMED', '--add-opens=java.base/java.text=ALL-UNNAMED', '--add-opens=java.base/java.text.spi=ALL-UNNAMED', '--add-opens=java.base/java.time=ALL-UNNAMED', '--add-opens=java.base/java.time.chrono=ALL-UNNAMED', '--add-opens=java.base/java.time.format=ALL-UNNAMED', '--add-opens=java.base/java.time.temporal=ALL-UNNAMED', '--add-opens=java.base/java.time.zone=ALL-UNNAMED', '--add-opens=java.base/java.util=ALL-UNNAMED', '--add-opens=java.base/java.util.concurrent=ALL-UNNAMED', '--add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED', '--add-opens=java.base/java.util.concurrent.locks=ALL-UNNAMED', '--add-opens=java.base/java.util.function=ALL-UNNAMED', '--add-opens=java.base/java.util.jar=ALL-UNNAMED', '--add-opens=java.base/java.util.regex=ALL-UNNAMED', '--add-opens=java.base/java.util.spi=ALL-UNNAMED', '--add-opens=java.base/java.util.stream=ALL-UNNAMED', '--add-opens=java.base/java.util.zip=ALL-UNNAMED', '--add-opens=java.datatransfer/java.awt.datatransfer=ALL-UNNAMED', '--add-opens=java.desktop/java.applet=ALL-UNNAMED', '--add-opens=java.desktop/java.awt=ALL-UNNAMED', '--add-opens=java.desktop/java.awt.color=ALL-UNNAMED', '--add-opens=java.desktop/java.awt.desktop=ALL-UNNAMED', '--add-opens=java.desktop/java.awt.dnd=ALL-UNNAMED', '--add-opens=java.desktop/java.awt.dnd.peer=ALL-UNNAMED', '--add-opens=java.desktop/java.awt.event=ALL-UNNAMED', '--add-opens=java.desktop/java.awt.font=ALL-UNNAMED', '--add-opens=java.desktop/java.awt.geom=ALL-UNNAMED', '--add-opens=java.desktop/java.awt.im=ALL-UNNAMED', '--add-opens=java.desktop/java.awt.im.spi=ALL-UNNAMED', '--add-opens=java.desktop/java.awt.image=ALL-UNNAMED', '--add-opens=java.desktop/java.awt.image.renderable=ALL-UNNAMED', '--add-opens=java.desktop/java.awt.peer=ALL-UNNAMED', '--add-opens=java.desktop/java.awt.print=ALL-UNNAMED', '--add-opens=java.desktop/java.beans=ALL-UNNAMED', '--add-opens=java.desktop/java.beans.beancontext=ALL-UNNAMED', '--add-opens=java.instrument/java.lang.instrument=ALL-UNNAMED', '--add-opens=java.logging/java.util.logging=ALL-UNNAMED', '--add-opens=java.management/java.lang.management=ALL-UNNAMED', '--add-opens=java.prefs/java.util.prefs=ALL-UNNAMED', '--add-opens=java.rmi/java.rmi=ALL-UNNAMED', '--add-opens=java.rmi/java.rmi.activation=ALL-UNNAMED', '--add-opens=java.rmi/java.rmi.dgc=ALL-UNNAMED', '--add-opens=java.rmi/java.rmi.registry=ALL-UNNAMED', '--add-opens=java.rmi/java.rmi.server=ALL-UNNAMED', '--add-opens=java.sql/java.sql=ALL-UNNAMED']
}

jar {
    manifest {
        attributes 'Main-Class': 'SoundMan.App'
    }
}

dependencies {
    testCompile(
            'junit:junit:4.12',
            'org.codehaus.groovy:groovy-all:2.5.8',
            'org.spockframework:spock-core:1.3-groovy-2.5'
    )

    compile(
            'net.dv8tion:JDA:3.8.3_464',
            'com.sedmelluq:lavaplayer:+',
            'ch.qos.logback:logback-classic:1.2.3',
            'org.codehaus.groovy:groovy-all:2.5.8'
    )
}

startScripts {
    classpath += files('src/dist/config')
    doLast {
        def windowsScriptFile = file getWindowsScript()
        def unixScriptFile = file getUnixScript()
        windowsScriptFile.text = windowsScriptFile.text.replaceAll('set CLASSPATH=.*', 'rem original CLASSPATH declaration replaced by:\nset CLASSPATH=%APP_HOME%\\\\lib\\\\\\*;%APP_HOME%\\\\config')
        unixScriptFile.text = unixScriptFile.text.replace('$APP_HOME/lib/config', '$APP_HOME/config')
    }
}

tasks.withType(JavaExec) {
    classpath += files('src/dist/config')
}